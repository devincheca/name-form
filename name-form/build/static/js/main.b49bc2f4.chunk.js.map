{"version":3,"sources":["helpers/Request.js","helpers/NameFetcher.js","helpers/NameSaver.js","components/FormInput/FormInput.js","components/Header/Header.js","components/SavedNames/SavedNames.js","containers/NameContainer/NameContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Request","this","url","endpoint","data","callback","fetch","method","headers","body","JSON","stringify","then","res","json","catch","error","console","NameFetcher","req","run","stringInterpolator","name","result","fullLength","length","i","index","getMiddleCharIndex","charAt","substr","Math","floor","NameSaver","firstName","lastName","interpolate","firstNameEnc","getEncName","lastNameEnc","FormInput","props","useState","setFirstName","setLastName","className","id","placeholder","type","onKeyUp","event","target","value","onClick","onClear","clearAll","saver","onSuccess","save","saveNameInput","Header","SavedNames","getRowColor","isLoading","names","map","NameContainer","setNames","setLoading","fetchNames","fetcher","getNames","refreshNames","useEffect","trace","setTimeout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b49bc2f4.chunk.js","sourcesContent":["export default class Request {\n  \n  constructor() {\n    this.url = 'http://localhost:4321/'\n    // this.url = 'http://localhost:4321/'\n    this.endpoint = ''\n    this.data = {}\n    this.callback = () => { return }\n  }\n\n  run() {\n    fetch(this.url + this.endpoint, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.data)\n    })\n      .then((res) => res.json())\n      .then((res) => this.callback(res))\n      .catch((error) => console.error('Error:', error))\n  }\n\n}","import Request from './Request'\n\nexport default class NameFetcher {\n\n  constructor() {\n    this.callback = () => { return }\n  }\n\n  getNames() {\n    const req = new Request()\n    req.endpoint = 'names/getNames'\n    req.callback = this.callback\n    req.run()\n  }\n\n}\n","import Request from './Request'\n\nclass stringInterpolator {\n\n  constructor() {\n    this.name = ''\n  }\n\n  getEncName() {\n    let result = ''\n    const fullLength = this.name.length\n    for (let i = 0; i < fullLength; i++) {\n      const index = this.getMiddleCharIndex(this.name)\n      result += this.name.charAt(index)\n      this.name = this.name.substr(0, index) + this.name.substr(index + 1)\n    }\n    return result\n  }\n\n  getMiddleCharIndex(name) {\n    if (name.length % 2 === 0) {\n        return (name.length/2) - 1\n    } else {\n        return Math.floor(name.length/2)\n    }\n  }\n\n}\n\nexport default class NameSaver {\n\n  constructor() {\n    this.firstName = ''\n    this.lastName = ''\n    this.callback = () => { return }\n  }\n\n  save() {\n    const interpolate = new stringInterpolator()\n    interpolate.name = this.firstName\n    const firstNameEnc = interpolate.getEncName()\n    interpolate.name = this.lastName\n    const lastNameEnc = interpolate.getEncName()\n    const req = new Request()\n    req.endpoint = 'names/saveName'\n    req.data = {\n      firstName: this.firstName,\n      lastName: this.lastName,\n      firstNameEnc: firstNameEnc,\n      lastNameEnc: lastNameEnc\n    }\n    req.callback = this.callback\n    req.run()\n  } \n\n}\n","import { useState } from 'react';\nimport './FormInput.scoped.css';\nimport {\n  NameSaver,\n  Request\n} from '../../helpers/helpers'\n\nfunction FormInput(props) {\n\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n\n  function clearAll() {\n    const req = new Request()\n    req.endpoint = 'names/clearAll'\n    req.callback = () => props.onClear()\n    req.run()\n  }\n\n  function saveNameInput() {\n    const saver = new NameSaver()\n    saver.firstName = firstName\n    saver.lastName = lastName\n    saver.callback = (res) => props.onSuccess(res)\n    saver.save()\n  }\n\n  return (\n    <div className=\"input-white\">\n      <div className=\"row pad-sides\">\n        <div className=\"col s12\">\n          <div className=\"row\">\n            <div className=\"input-field col s6\">\n              <input\n                id=\"first_name\"\n                placeholder=\"First Name\"\n                type=\"text\"\n                className=\"validate\"\n                onKeyUp={(event) => setFirstName(event.target.value)} />\n            </div>\n            <div className=\"input-field col s6\">\n              <input\n                id=\"last_name\"\n                placeholder=\"Last Name\"\n                type=\"text\"\n                className=\"validate\"\n                onKeyUp={(event) => setLastName(event.target.value)} />\n            </div>\n          </div>\n          <div className=\"row\">\n            <button\n              className=\"waves-effect waves-light btn red button-space\"\n              onClick={() => clearAll()}>Clear All</button>\n            <button\n              className=\"waves-effect waves-light btn button-space\"\n              onClick={() => saveNameInput()}>Save</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n}\n\nexport default FormInput;\n","import './Header.scoped.css'\n\nfunction Header() {\n\n  return (\n    <div className=\"Header\">\n      <h1>Name 'Encryptor'</h1>\n    </div>\n  );\n\n}\n\nexport default Header;\n","import './SavedNames.scoped.css'\n\nfunction SavedNames(props) {\n\n  function getNames() {\n    if (props.isLoading) {\n      return (\n        <div className=\"progress\">\n          <div className=\"indeterminate\"></div>\n        </div>\n      )\n    }\n    if (props.names.length === 0) {\n      return (\n        <div>\n          No names saved\n        </div>\n      )\n    }\n    return props.names.map((name, i) => {\n      return (\n        <div key={i} className={getRowColor(i)}>\n          <div className=\"row unset-bottom\">\n            <div className=\"col s6\">\n              First Name: {name.firstName}\n            </div>\n            <div className=\"col s6\">\n              Last Name: {name.lastName}\n            </div>\n          </div>\n          <div className=\"row unset-bottom\">\n            <div className=\"col s6\">\n              First Name Encrypted: {name.firstNameEnc}\n            </div>\n            <div className=\"col s6\">\n              Last Name Encrypted: {name.lastNameEnc}\n            </div>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  function getRowColor(i) {\n    return i % 2 === 0 ? 'even-row' : 'odd-row';\n  }\n\n  return (\n    <div className=\"name-div\">\n      { getNames() }\n    </div>\n  );\n\n}\n\nexport default SavedNames;\n","import { useState, useEffect } from 'react'\nimport './NameContainer.scoped.css'\nimport {\n  FormInput,\n  SavedNames\n} from '../../components/components'\nimport NameFetcher from '../../helpers/NameFetcher'\n\nfunction NameContainer() {\n\n  const [names, setNames] = useState([])\n  const [isLoading, setLoading] = useState(true)\n\n  useEffect(() => {\n    if (isLoading) {\n      try { fetchNames() } catch(error) {\n        console.trace(error)\n        setTimeout(fetchNames, 5000)\n      }\n    }\n  })\n\n  function fetchNames() {\n    const fetcher = new NameFetcher()\n    fetcher.callback = (res) => {\n      setLoading(false)\n      if (res) {\n        setNames(res)\n      }\n    }\n    fetcher.getNames()\n  }\n\n  function refreshNames() {\n    setLoading(true)\n    fetchNames()\n  }\n\n  return (\n    <div className=\"\">\n      <SavedNames\n        names={names}\n        isLoading={isLoading} />\n      <FormInput\n        onSuccess={() => refreshNames()}\n        onClear={() => refreshNames()} />\n    </div>\n  );\n\n}\n\nexport default NameContainer;\n","import './App.css'\nimport { Header } from './components/components'\nimport { NameContainer } from './containers/containers'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <NameContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}